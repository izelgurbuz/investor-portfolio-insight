version: "3.8"

services:
  db:
    image: postgres:16-alpine
    container_name: finance_pg
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-finance}
      POSTGRES_USER: ${POSTGRES_USER:-finance}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-finance}
    ports:
      - "5433:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test:
        [
          "CMD-SHELL",
          "pg_isready -U ${POSTGRES_USER:-finance} -d ${POSTGRES_DB:-finance}",
        ]
      interval: 5s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  adminer:
    image: adminer:4
    depends_on:
      - db
    ports:
      - "8080:8080"
    environment:
      ADMINER_DEFAULT_SERVER: db
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: finance_redis
    ports:
      - "6379:6379"
    restart: unless-stopped

  worker:
    image: python:3.11-slim
    container_name: finance_worker
    depends_on:
      - redis
      - db
    working_dir: /app
    volumes:
      - .:/app:delegated
    environment:
      # IMPORTANT: use service names visible inside docker network
      DATABASE_URL: postgres://finance:finance@db:5432/finance
      REDIS_URL: redis://redis:6379/0
      DJANGO_SETTINGS_MODULE: core.settings
      PYTHONUNBUFFERED: "1"
    command: >
      bash -lc "
      pip install -r requirements.txt &&
      celery -A core worker -l info --concurrency=4 -E
      "

  flower:
    image: mher/flower:2.0
    container_name: finance_flower
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
    ports:
      - "5555:5555"
    restart: unless-stopped

  beat:
    image: python:3.11-slim
    container_name: finance_beat
    depends_on:
      - redis
      - db
    working_dir: /app
    volumes:
      - .:/app:delegated
    environment:
      - DATABASE_URL=${DATABASE_URL:-postgres://finance:finance@db:5432/finance}
      - REDIS_URL=redis://redis:6379/0
      - DJANGO_SETTINGS_MODULE=core.settings
      - PYTHONUNBUFFERED=1
    command: >
      bash -lc "
      pip install -r requirements.txt &&
      celery -A core beat -l info
      "
    restart: unless-stopped

volumes:
  pgdata:
